name: CI/CD for Azure Kubernetes Service

on:
  push:
    branches:
      - main # Change this to the branch you want to trigger the workflow

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker
      uses: docker/setup-docker@v2
      with:
        dockerfile: Dockerfile

    - name: Build Docker image
      run: docker build -t your-docker-image-name:latest .

    - name: Login to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: <your-acr-name>.azurecr.io # Replace with your Azure Container Registry (ACR) name
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Push Docker image to ACR
      run: |
        docker push <your-acr-name>.azurecr.io/your-docker-image-name:latest

    - name: Deploy to AKS
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      run: |
        echo "$KUBE_CONFIG_DATA" | base64 --decode > kubeconfig.yaml
        kubectl config use-context <your-aks-context-name>
        kubectl apply -f Deployment.yml
        kubectl apply -f service.yml
        kubectl apply -f ingress.yml

# Add additional steps for testing, linting, etc. as needed

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Deploy to AKS
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      run: |
        echo "$KUBE_CONFIG_DATA" | base64 --decode > kubeconfig.yaml
        kubectl config use-context <your-aks-context-name>
        kubectl apply -f Deployment.yml
        kubectl apply -f service.yml
        kubectl apply -f ingress.yml
